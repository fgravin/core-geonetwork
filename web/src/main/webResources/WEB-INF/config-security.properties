#Core security properties

logout.success.url=/index.html
passwordSalt=secret-hash-salt=

# LDAP security properties

ldap.auth.enabled=true

ldap.auth.required=true
ldap.auth.search.filter=(cn={0})

ldap.auth.method=bind
ldap.base.provider.url=ldap://${ldap.host}:${ldap.port}
ldap.base.dn=${ldap.base}

ldap.base.dn.pattern=${ldap.base.dn.pattern}

ldap.base.search.filter=${ldap.base.search.filter}
ldap.base.search.base=${ldap.base.search.base}


ldap.security.principal=${ldap.binddn}
ldap.security.credentials=${ldap.bindpw}

ldap.privilege.import=true

ldap.privilege.pattern=${ldap.privilege.pattern}
ldap.privilege.pattern.idx.profil=${ldap.privilege.pattern.idx.profil}
ldap.privilege.pattern.idx.group=${ldap.privilege.pattern.idx.group}

ldap.privilege.create.nonexisting.groups=false

ldap.sync.enabled=true

# Run LDAP sync every 15 min
ldap.sync.cron=0 0/15 * * * ?
ldap.sync.startDelay=60000
ldap.sync.user.search.base=${ldap.base.search.base}
ldap.sync.user.search.filter=(&(objectClass=*)(mail=*@*)(uid={0})(givenName=*))

# CAS properties
cas.baseURL=${cas.baseURL}
cas.ticket.validator.url=${cas.baseURL}
cas.login.url=${cas.baseURL}/login
cas.logout.url=${cas.baseURL}/logout?url=${geonetwork.https.url}/

# either the hardcoded url to the server
# or if has the form @blah@ it will be replaced with
# the server details from the server configuration
geonetwork.https.url=@to_be_replaced_at_runtime@

