# Default Logging Configuration
log4j.rootLogger = OFF

### GEONETWORK SETTINGS ########################################################

log4j.logger.geonetwork             = ${gn.log.level}, console, jeeves
log4j.logger.geonetwork.search      = ${gn.log.level}
log4j.logger.geonetwork.schemamanager = ${gn.log.level}
log4j.logger.geonetwork.thesaurus-man = ${gn.log.level}
log4j.logger.geonetwork.thesaurus = ${gn.log.level}
log4j.logger.geonetwork.editorexpandelement = ${gn.log.level}
log4j.logger.geonetwork.editoraddelement = ${gn.log.level}
log4j.logger.geonetwork.LanguageDetector = ${gn.log.level}
log4j.logger.geonetwork.index           = ${gn.log.level}
log4j.logger.geonetwork.csw             = ${gn.log.level}
log4j.logger.geonetwork.csw.search      = ${gn.log.level}
log4j.logger.geonetwork.harvester       = ${gn.log.level}
log4j.logger.geonetwork.lucene          = ${gn.log.level}
log4j.logger.geonetwork.ldap          = ${gn.log.level}
log4j.logger.geonetwork.lucene.tracking      = ${gn.log.level}
log4j.logger.geonetwork.mef         = ${gn.log.level}
log4j.logger.geonetwork.z3950server = ${gn.log.level}
log4j.logger.geonetwork.z3950       = ${gn.log.level}
log4j.logger.geonetwork.sru         = ${gn.log.level}
log4j.logger.geonetwork.sru.search  = ${gn.log.level}
log4j.logger.geonetwork.GeoServerPublisher = ${gn.log.level}
log4j.logger.geonetwork.data.directory  = ${gn.log.level}

log4j.logger.org.springframework = ${gn.log.level}, console, jeeves
log4j.logger.org.springframework.* = ${gn.log.level}
log4j.logger.org.springframework.security.ldap = ${gn.log.level}

### JEEVES SETTINGS ############################################################

log4j.logger.jeeves      = ${gn.log.level}, console, jeeves
log4j.logger.jeeves.dbms = ${gn.log.level}

# If resourcetracking is set to DEBUG then each time a resource
# is obtained an exception will be created to track the stack trace
# of where the resource was obtained.  The traces can be viewed by
# calling debug.openconnection.accessors as administrator
log4j.logger.jeeves.dbms.resourcetracking = ${gn.log.level}

log4j.logger.jeeves.monitor = ${gn.log.level}
log4j.logger.jeeves.engine = ${gn.log.level}
log4j.logger.jeeves.dbmspool = ${gn.log.level}
log4j.logger.jeeves.resources = ${gn.log.level}
log4j.logger.jeeves.xlinkprocessor = ${gn.log.level}
log4j.logger.jeeves.transformerFactory = ${gn.log.level}
log4j.logger.jeeves.xmlresolver = ${gn.log.level}

### SPRING ####

log4j.logger.org.springframework   = ${gn.log.level}, jeeves, console

### JZKIT SETTINGS ####

log4j.logger.com.k_int=${gn.log.level}, console, jeeves
log4j.logger.org.jzkit=${gn.log.level}, console, jeeves
log4j.logger.org.jzkit.a2j=${gn.log.level}, console, jeeves
log4j.logger.org.jzkit.search.impl.LRUCache = ${gn.log.level}, console,jeeves

### JEEVES APPENDER ############################################################

log4j.appender.jeeves            =org.apache.log4j.DailyRollingFileAppender
log4j.appender.jeeves.DatePattern='.'yyyy-MM-dd
log4j.appender.jeeves.file       = ${gn.log.path}
#log4j.appender.jeeves.file = ${catalina.home}/logs/geonetwork.log
log4j.appender.jeeves.layout     = org.apache.log4j.PatternLayout
log4j.appender.jeeves.layout.ConversionPattern=%d{ISO8601} %-5p [%c] - %m%n

### CONSOLE SETTINGS ###########################################################

log4j.appender.console        = org.apache.log4j.ConsoleAppender
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%c] - %m%n
